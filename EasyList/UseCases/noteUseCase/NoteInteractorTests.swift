//
//  NoteInteractorTests.swift
//  EasyList
//
//  Created by Aristeidis Panagiotopoulos on 23/10/2018.
//  Copyright (c) 2018 arisPanagiotopoulos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import EasyList
import XCTest

class NoteInteractorTests: XCTestCase {
    var sut = NoteInteractor()
    
    // MARK: Test doubles

    class NotePresentationLogicSpy: NotePresentationLogic {
        var presentSomethingCalled = false
        var notePassed: NoteModel?

        func presentSomething(response: Note.Create.Response) {
            presentSomethingCalled = true
        }
    }
    
    class NoteWorkerSpy: NoteRepositoryLogic {
        var createNoteCalled = false
        var title = ""
        var text = ""
        
        func createNote(title: String, text: String) {
            createNoteCalled = true
            self.title = title
            self.text = text
        }
    }
  
  // MARK: Tests
  
    func test_newNote_should_call_workerAndPresenter() {
        let presentSpy = NotePresentationLogicSpy()
        sut.presenter = presentSpy
        let workerSpy = NoteWorkerSpy()
        sut.worker = workerSpy
        let request = Note.Create.Request(title: "ser", text: "ff")
        // When
        sut.newNote(request: request)

        // Then
        XCTAssertTrue(presentSpy.presentSomethingCalled)
        XCTAssertTrue(workerSpy.createNoteCalled)
        XCTAssertTrue(workerSpy.text == "ff")
        XCTAssertTrue(workerSpy.title == "ser")
    }
}
